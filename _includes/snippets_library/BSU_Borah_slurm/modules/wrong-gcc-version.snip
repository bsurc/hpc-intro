Let's take a closer look at the `gcc` module. GCC is an extremely widely used
C/C++/Fortran compiler. Tons of software is dependent on the GCC version, and
might not compile or run if the wrong version is loaded. In this case, there
are four different versions: `gcc/9.2.0`, `gcc/7.5.0`, `gcc/8.2.0`, and 
`gcc/10.2.0`. How do we load a specific version?

In this case, `gcc/9.2.0` comes first, so if we type `module load gcc`, 
this is the copy that will be loaded.

```
{{ site.remote.prompt }} module load gcc
{{ site.remote.prompt }} module list
{{ site.remote.prompt }} gcc --version
```
{: .language-bash}

```
Currently Loaded Modulefiles:
 1) gcc/9.2.0  

gcc (GCC) 9.2.0
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
```
{: .output}

So how do we load a different copy of a software package? In this case, the
only change we need to make is be more specific about the module we are
loading. The only change we need to make to our `module load`
command is to leave in the version number after the `/`.

```
{{ site.remote.prompt }} module load gcc/10.2.0
{{ site.remote.prompt }} gcc --version
```
{: .language-bash}

```
gcc (GCC) 10.2.0
Copyright (C) 2020 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
```
{: .output}

We now have successfully switched from GCC 9.2.0 to GCC 10.2.0.
